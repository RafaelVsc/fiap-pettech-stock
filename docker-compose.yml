services:
  api:
    build: .
    container_name: pettech_api
    ports:
      - "3010:3010"
    env_file: .env
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - mynetwork

  mongodb:
    image: mongo:6
    container_name: mongodb_dev
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-devuser}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-devpass}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-nestdb}
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - mynetwork

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - mynetwork
    depends_on:
      - prometheus

  # opcional: interface web para visualizar e testar o Mongo
  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo_express
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER:-devuser}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD:-devpass}
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH: "false"
    restart: unless-stopped
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mongo_data:
  prometheus_data:
  grafana_data:
